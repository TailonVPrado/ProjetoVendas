package canvas.cadastro;

import Exception.DescricaoInvalidaException;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import models.Cliente;
import service.ClienteService;

/**
 *
 * @author tailon.prado
 */
public class CadastroCliente extends javax.swing.JFrame {

    /**
     * Creates new form CadastroCliente
     */
    public CadastroCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        atualizaCliente = new javax.swing.JButton();
        excluiCliente = new javax.swing.JButton();
        idCliente = new javax.swing.JTextField();
        nomeCliente = new javax.swing.JTextField();
        cpfCliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        atualizaCliente.setText("Cadastrar");
        atualizaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaClienteMouseClicked(evt);
            }
        });
        atualizaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaClienteActionPerformed(evt);
            }
        });

        excluiCliente.setText("Excluir");
        excluiCliente.setEnabled(false);
        excluiCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                excluiClienteMouseClicked(evt);
            }
        });
        excluiCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluiClienteActionPerformed(evt);
            }
        });

        idCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idClienteFocusLost(evt);
            }
        });
        idCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClienteActionPerformed(evt);
            }
        });
        idCliente.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                idClientePropertyChange(evt);
            }
        });
        idCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idClienteKeyReleased(evt);
            }
        });

        cpfCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cpfClienteKeyReleased(evt);
            }
        });

        jLabel1.setText("Id");

        jLabel2.setText("Cpf");

        jLabel3.setText("Nome");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(excluiCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(atualizaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfCliente)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atualizaCliente)
                    .addComponent(excluiCliente))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void excluiClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluiClienteActionPerformed
        Cliente cliente = new Cliente();
        cliente.setId(Integer.parseInt(idCliente.getText()));
        cliente.setCpf(cpfCliente.getText());
        cliente.setNome(nomeCliente.getText());
        ClienteService clienteService = new ClienteService();
        
        try {
            Object[] options = { "Sim", "Não" }; 
            int opcao = JOptionPane.showOptionDialog(null, "Deseja realmente excluir este registro?", "Exclusão de Registro", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[1]); 
            if (opcao == 0) {
                clienteService.delete(cliente);
                JOptionPane.showMessageDialog(null, "Cliente ("+cliente.getId()+") excluido com sucesso");
                idCliente.setText("");
                cpfCliente.setText("");
                nomeCliente.setText("");
                excluiCliente.setEnabled(false);
                atualizaCliente.setText("Cadastrar");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao excluir Cliente. Erro: " + ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir Cliente. Erro: " + ex.getMessage());
        }
    }//GEN-LAST:event_excluiClienteActionPerformed

    private void idClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idClienteKeyReleased
        idCliente.setText(idCliente.getText().replaceAll("[^0-9]+", ""));
    }//GEN-LAST:event_idClienteKeyReleased

    private void cpfClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpfClienteKeyReleased
        cpfCliente.setText(cpfCliente.getText().replaceAll("[^0-9]+", ""));
    }//GEN-LAST:event_cpfClienteKeyReleased

    private void idClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClienteActionPerformed
    }//GEN-LAST:event_idClienteActionPerformed

    private void idClientePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_idClientePropertyChange
        
    }//GEN-LAST:event_idClientePropertyChange

    private void idClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idClienteFocusLost
        if(idCliente.getText().equals("")){
            excluiCliente.setEnabled(false);
            atualizaCliente.setText("Cadastrar");
        }else{
            excluiCliente.setEnabled(true);
            atualizaCliente.setText("Atualizar");
            
            ClienteService clienteService = new ClienteService();
            Cliente cliente = new Cliente();
            try {
                cliente = clienteService.findById(Integer.parseInt(idCliente.getText()));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro ao buscar o cliente. Erro: "+ex.getMessage());
            }
            
            if(cliente.getId() == null){
                JOptionPane.showMessageDialog(null, "Cliente com id ("+idCliente.getText()+") não encontrado.");
                excluiCliente.setEnabled(false);
                atualizaCliente.setText("Cadastrar");
                idCliente.setText("");
            }else{
                nomeCliente.setText(cliente.getNome());
                cpfCliente.setText(cliente.getCpf());
            }
        }
    }//GEN-LAST:event_idClienteFocusLost

    private void atualizaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaClienteActionPerformed
        Cliente cliente = new Cliente();
        if(!idCliente.getText().equals(""))
            cliente.setId(Integer.parseInt(idCliente.getText()));
        cliente.setNome(nomeCliente.getText());
        cliente.setCpf(cpfCliente.getText());
        
        ClienteService clienteService = new ClienteService();
        if(idCliente.getText().equals("")){
            try {   
                clienteService.insert(cliente);
                idCliente.setText(cliente.getId().toString());
                excluiCliente.setEnabled(true);
                atualizaCliente.setText("Atualizar");
                JOptionPane.showMessageDialog(null, "Cliente ("+cliente.getId()+") cadastrado com sucesso.");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar cliente. Erro: "+ex.getMessage());
            }
        }
        else{
            try {
                clienteService.update(cliente);
                JOptionPane.showMessageDialog(null, "Cliente ("+cliente.getId()+") atualizado com sucesso.");
            } catch (DescricaoInvalidaException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar Cliente. Erro: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_atualizaClienteActionPerformed

    private void atualizaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaClienteMouseClicked
        
    }//GEN-LAST:event_atualizaClienteMouseClicked

    private void excluiClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excluiClienteMouseClicked
    }//GEN-LAST:event_excluiClienteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizaCliente;
    private javax.swing.JTextField cpfCliente;
    private javax.swing.JButton excluiCliente;
    private javax.swing.JTextField idCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nomeCliente;
    // End of variables declaration//GEN-END:variables
}
